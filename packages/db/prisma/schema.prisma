generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  fullName  String
  createdAt DateTime @default(now())

  projectsOwned Project[] @relation("ProjectOwner")
  tasksAssigned Task[]    @relation("TaskAssignee")
  tasksCreated  Task[]    @relation("TaskCreator")
  comments      TaskComment[]
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  owner User @relation("ProjectOwner", fields: [ownerId], references: [id])
  tasks Task[]
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String
  status      TaskStatus
  priority    TaskPriority
  dueDate     DateTime?
  projectId   String
  assignedTo  String
  createdBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project   Project @relation(fields: [projectId], references: [id])
  assignee  User    @relation("TaskAssignee", fields: [assignedTo], references: [id])
  creator   User    @relation("TaskCreator", fields: [createdBy], references: [id])
  comments  TaskComment[]
}

model TaskComment {
  id        String   @id @default(uuid())
  content   String
  taskId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task Task @relation(fields: [taskId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

enum TaskStatus {
  todo
  in_progress
  done
}

enum TaskPriority {
  low
  medium
  high
}
